# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:11.15
    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: 
          name: "Install dependencies" 
          command: yarn install --frozen-lockfile

      - run: 
          name: "Bootstrap Lerna"
          command: yarn bootstrap

      - save_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - apps/*/node_modules
            - packages/**/*/node_modules

  test:
    docker:
      # specify the version you desire here
      - image: circleci/node:11.15
    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
              
      - run: 
          name: "Run Tests"
          command: yarn test

  deploy:
    docker:
      # specify the version you desire here
      - image: circleci/node:11.15
    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: 
          name: "Login to Prisma"
          command: yarn prisma-login
              
      - run: 
          name: "Deploy Production"
          command: yarn deploy

  deploy-staging-db:
    docker:
      # specify the version you desire here
      - image: circleci/node:11.15
    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
              
      - run: 
          name: "Login to Prisma"
          command: yarn prisma-login

      - run: 
          name: "Deploy DB Staging"
          command: cd apps/databse && yarn deploy:staging

  deploy-staging-admin:
    docker:
      # specify the version you desire here
      - image: circleci/node:11.15
    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
              
      - run: 
          name: "Login to Prisma"
          command: yarn prisma-login

      - run: 
          name: "Deploy Admin Staging"
          command: cd apps/admin && yarn deploy:staging

  deploy-staging-storybook:
    docker:
      # specify the version you desire here
      - image: circleci/node:11.15
    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
              
      - run: 
          name: "Login to Prisma"
          command: yarn prisma-login

      - run: 
          name: "Deploy Admin Staging"
          command: cd apps/storybook && yarn deploy:staging

workflows: 
  version: 2
  build_test_and_deploy: 
    jobs: 
      - build
      - test:
          requires: 
            - build
      - deploy:
          requires: 
            - test 
          filters:
            branches:
              only:
                - master
      - deploy-staging-db:
          requires: 
            - test 
          filters:
            branches:
              only:
                - develop
      - deploy-staging-admin:
          requires: 
            - test 
          filters:
            branches:
              only:
                - develop
      - deploy-staging-storybook:
          requires: 
            - test 
          filters:
            branches:
              only:
                - develop